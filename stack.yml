version: '3.8'

networks:
  swarm-net:
    driver: overlay
    name: swarm-net
    ipam:
      config:
        - subnet: "10.99.0.0/16"

volumes:
  certs: {}
  portainer: {}

services:
  certs:
    image: alpine
    networks:
      - swarm-net
    volumes:
      - certs:/etc/ssl/traefik
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  traefik:
    hostname: traefik
    image: traefik:latest
    networks:
      - swarm-net
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/tls.yml:/etc/traefik/tls.yml:ro
      - certs:/etc/ssl/traefik:ro
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--providers.docker=true"
      - "--providers.docker.watch"
      - "--providers.swarm=true"
      - "--providers.file.filename=/etc/traefik/tls.yml"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=swarm-net"
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.rule=Host(`dashboard.${DOMAIN:-traefik.me}`)"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.routers.dashboard.tls=true"
        - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
        - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_USER:-admin}:${TRAEFIK_PASSWD?Variable is not set}"

  portainer:
    hostname: portainer
    image: "portainer/portainer-ce:latest"
    networks:
      - swarm-net
    ports:
      - target: 9000
        published: 9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer:/data
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=swarm-net"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN:-traefik.me}`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls=true"